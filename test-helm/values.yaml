# Default values for test-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

name: kamp

replicaCount: 1

selector:
  app: kamp

labels:
  app: kamp    

image:
  repository: europe-west8-docker.pkg.dev/km1-runcloud/charan-nginx/new-nginx:v2
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  annotations: 
    cloud.google.com/neg: '{"ingress": true}'

ingress:
  name: kamp
  enabled: false
  className: ""
  annotations: 
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "kubernetes-ingress"
  hosts:
    - host: chart-example.local
      paths:
        - path: /*
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  requests:
   cpu: "250m"
   memory: "200Mi"
  limits:
   cpu: "2"  
   memory: "1600Mi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 60
  //targetCPUUtilizationPercentage: 60
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
